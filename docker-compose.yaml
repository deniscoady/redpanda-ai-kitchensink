version: '3'
name: redpanda-ai-quickstart

networks:
  redpanda_ai_network:
    driver: bridge

services:
  postgres:
    container_name: postgres
    image: ghcr.io/enterprisedb/postgresql
    restart: unless-stopped
    networks:
      - redpanda_ai_network
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432

  pgadmin4:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    entrypoint:
      - sh
      - -c
      - |
        echo '{ "Servers": { "1": { "Group": "Servers", "Name": "Docker", "Host": "postgres", "Port": 5432, "MaintenanceDB": "postgres", "Username": "postgres", "Password": "postgres", "SSLMode": "prefer", "Favorite": true } } }' > /tmp/servers.json &&
        /entrypoint.sh
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@redpanda.com # unused, required placeholder
      PGADMIN_DEFAULT_PASSWORD: password        # unused, required placeholder
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_SERVER_JSON_FILE: /tmp/servers.json
    networks:
      - redpanda_ai_network
    ports:
      - 5050:80
    depends_on:
      - postgres

  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:latest
    restart: unless-stopped
    networks:
      - redpanda_ai_network
    ports:
      - 6333:6333

  neo4j:
    container_name: neo4j
    image: neo4j:latest
    restart: unless-stopped
    networks:
      - redpanda_ai_network
    ports:
      - 7474:7474
      - 7687:7687

  ollama:
    container_name: ollama
    image: ollama/ollama
    restart: unless-stopped
    networks:
      - redpanda_ai_network
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ports:
      - 11434:11434

  open-webui:
    container_name: open-webui
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped
    environment:
      OLLAMA_BASE_URL: http://ollama:11434
      WEBUI_AUTH: False
    networks:
      - redpanda_ai_network
    ports:
      - 3000:8080


  redpanda:
    container_name: redpanda
    image: docker.redpanda.com/redpandadata/redpanda:latest
    restart: unless-stopped
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    networks:
      - redpanda_ai_network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644


  console:
    container_name: console
    image: redpandadata/console:latest
    # This command writes the Redpanda Console configuration to a temporary file
    # and then starts the console application.
    command:
      - echo $CONSOLE_CONFIG_FILE
    environment:
      # Path to the configuration file used by the console.
      KAFKA_BROKERS: redpanda:9092
      KAFKA_SCHEMA_REGISTRY_ENABLED: true
      KAFKA_SCHEMA_REGISTRY_URLS: http://redpanda:8081
      REDPANDA_ADMINAPI_ENABLED: true
      REDPANDA_ADMINAPI_URLS: http://redpanda:9644
    ports:
      - 8080:8080
    networks:
      - redpanda_ai_network
    depends_on:
      - redpanda


  connect:
    container_name: connect
    build: 
      context: ./connect
    volumes:
      - ./pipelines/:/pipelines/
    command:
      - sh
      - -c
      - |
        redpanda-connect run /pipelines/hello-world.yaml &
        wait
    depends_on:
      - postgres
      - redpanda
      - qdrant
      # - neo4j
      - ollama